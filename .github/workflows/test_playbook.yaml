name: Test Playbook

on:
  push:
    branches-ignore:
      - readthedocs
      - master
env:
  # Global environment variables for the entire job
  BIOBLEND_GALAXY_URL: "http://127.0.0.1:80"
  BIOBLEND_TEST_JOB_TIMEOUT: "240"
  GALAXY_USER: tooladmin@galaxy.org
  # NOTE: The password is intentionally in plaintext for this demo version.
  GALAXY_USER_PASSWD: artbio2024

jobs:
  Ubuntu_20-04:
    name: GalaxyXpand on Ubuntu 20.04
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

#    - name: Install Python dependencies and verify
#      id: install_deps
#      run: |
#        python -m pip install -U pip
#        pip install -r requirements.txt
#        echo "--- INSTALLED PACKAGES ---"
#        pip list # DEBUG: Show what was actually installed by pip

    - name: Install Python dependencies and verify
      # CORRECT SYNTAX: Custom shell arguments must be followed by the {0} placeholder,
      # which represents the path to the temporary script file.
      shell: bash --noprofile --norc {0}
      id: install_deps
      run: |
        python -m pip install -U pip
        pip install -r requirements.txt
        echo "--- INSTALLED PACKAGES ---"
        pip list

    - name: Debug environment before running Ansible
      run: |
        echo "--- DEBUGGING PATH ---"
        echo "Current PATH is: $PATH"
        echo "--- LOCATING ANSIBLE-GALAXY ---"
        which ansible-galaxy || echo "ansible-galaxy command NOT FOUND by 'which'" # DEBUG: Check if the shell can find the command

    - name: Run Ansible playbook to install Galaxy
      run: |
        sudo apt-get -qq update -y
        sudo apt-get -qq --purge remove nginx* || true
        ansible-playbook --extra-vars RUNNER_ALLOW_RUNASROOT="1" \
                         -e ansible_user="runner" \
                         -e allow_world_readable_tmpfiles="true" \
                         --skip-tags galaxy_build_client \
                         playbook.yml

    - name: Wait for Galaxy API to be available
      run: |
        sudo systemctl restart nginx.service
        echo "Waiting for Galaxy to become available..."
        timeout 180s bash -c 'until curl --fail -s http://127.0.0.1/api/version > /dev/null; do echo -n "." && sleep 5; done'
        echo "Galaxy is up!"
        sudo galaxyctl status

    - name: Run Ansible playbook to install Galaxy tools
      run: ansible-playbook --extra-vars RUNNER_ALLOW_RUNASROOT="1" -e ansible_user="runner" install_tools.yml

    - name: Set API key as environment variable
      run: |
        API_KEY=$(cat ./apikey.txt)
        echo "BIOBLEND_GALAXY_API_KEY=$API_KEY" >> $GITHUB_ENV

    - name: Run Bioblend tests
      # GALAXY_USER_PASSWD is already available from the global 'env' block.
      # The API Key is available from the previous step via $GITHUB_ENV.
      run: |
        bioblend-galaxy-tests --color=yes -v TestGalaxyHistories.py TestGalaxyTools.py --no-summary# -k "not test_other_users_histories"
